version: '3'

services:
  database-layer:
    image: mysql
    container_name: ${DB_HOST}
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}

    volumes:
      - database-volume-mysql:/var/lib/mysql
    ports:
      - '3306:3306'
    networks:
      - shared-network
    restart: on-failure

  cache-layer:
    image: redis:latest
    container_name: ${CACHE_HOST}
    ports:
      - '6379:6379'
    networks:
      - shared-network
    restart: on-failure
    volumes:
      - cache-volume-redis:/data

  express-typescript-server:
    depends_on:
      - database-layer
      - cache-layer
    environment:
      - NODE_ENV=development
    build:
      context: .
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    container_name: express-typescript-server
    expose:
      - '4000'
    ports:
      - '4000:4000'
    command: npm run dev
    networks:
      - shared-network
    restart: on-failure

volumes:
  database-volume-mysql:
  cache-volume-redis:

networks:
  shared-network:
